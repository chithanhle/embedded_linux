LINUX BOOTING PROCESS
+-------+       +---------+       +--------+       +--------------+
|       |       |         |       |        |       |              |
|  RBL  +------>+ SPL/MLO +------>+ U-boot +------>+ Linux Kernel |
|       |       |         |       |        |       |              |
+-------+       +---------+       +--------+       +------+-------+
                                                          |
                                                          |
                                                          v
                                                   +------+-------+
                                                   |              |
                                                   |     RFS      |
                                                   |              |
                                                   +--------------+
(Generated by http://asciiflow.com/)

1. Requirements
 - RBL (ROM bootloader):
    + First piece of code to run on the SoC when you supply the power to the board
    + Written by the vendor during the chip production, you cannot change it
    + The source code is closed
    + Responsible for loading and running the second stage bootloader such as SPL or MLO
    + Run from ROM
    + Configure watchdog, PLL
    + Copy SPL / MLO into SDRAM then run it
 - SPL (Secondary Program Loader) / MLO (Memory Loader):
    + Responsible for loading and executing the third stage bootloader such as U-boot from the DDR
    + Run from internal SDRAM
    + Initialize UART, print out debug message
    + Reconfigure PLL to desired values
    + Initialize DDR registers
    + Configure suitable peripherals to load the U-boot image into the DDR
 - U-boot:
    + Load and run the linux kernel
    + Run from DDR
 - Linux kernel:
    + Run from DDR
 - RFS (Root file system):
    + Run from eMMC
2. Boot options
 - Sources:
    + NAND Flash
    + NOR Flash
    + USB
    + eMMC
    + SD card
    + Ethernet
    + UART
    + SPI
 - How does the SoC decide the boot order?
    + It reads the values from SYSBOOT[4:0] pins
    + The beaglebone uses only 1 button to configure the boot order, SYSBOOT[4:0] can have just 2 values 0b11100 & 0b11000 (when S2 is pressed)
      The corresponding orders would be: 
      * eMMC - SD card - UART0 - USB0
      * SPI - SD card - USB0 - UART0
